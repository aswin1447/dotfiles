#  _                                          __
# | |_ _ __ ___  _   ___  __  ___ ___  _ __  / _|
# | __| '_ ` _ \| | | \ \/ / / __/ _ \| '_ \| |_
# | |_| | | | | | |_| |>  < | (_| (_) | | | |  _|
#  \__|_| |_| |_|\__,_/_/\_(_)___\___/|_| |_|_|
#
# Author: Niru Maheswaranathan
# Website: https://github.com/nirum/dotfiles

# -- general -------------------------------------------------------------------

# true color support
set -ga terminal-overrides ",xterm-256color:Tc"

# modifier key
unbind C-b
set -g prefix C-s    # set ctrl-s to be the prefix

# vi key bindings
setw -g mode-keys vi

# key bindings in tmux command prompt (prefix + :)
set -g status-keys vi

# resizing options
setw -g aggressive-resize on
set-option -g @pane_resize "10"

# use the mouse
set -g mouse on

# utf8
set -g utf8 on

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -sg escape-time 0

# increase scrollback buffer size
set -g history-limit 50000

# tmux messages are displayed for 4 seconds
set -g display-time 4000

# focus events enabled for terminals that support them
set -g focus-events on

# -- aliases ----------------------------------------------------------------

# vim-tmux-navigator
# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
# bind -n <tab> if-shell "$is_vim" "send-keys C-<tab>" "select-window"

# kill K k X x
unbind K
bind K "kill-window"
unbind k
bind k confirm-before "kill-window"
unbind X
bind X "kill-pane"

# next window
bind C-p previous-window
bind C-n next-window

# reload
bind r source-file ~/dotfiles/tmux/.tmux.conf \; display-message "Config reloaded!"

# last window
bind C-s last-window
bind s last-window

# new windows should preserve the working directory
bind c new-window -c "#{pane_current_path}"
bind C-c new-window -c "#{pane_current_path}"

# bind - split-window -v -c "#{pane_current_path}"
# bind C-- split-window -v -c "#{pane_current_path}"
# bind \ split-window -h -c "#{pane_current_path}"
# bind C-\ split-window -h -c "#{pane_current_path}"

# Intuitive window-splitting keys.
bind | split-window -h -c '#{pane_current_path}' # normally prefix-%
bind \ split-window -h -c '#{pane_current_path}' # normally prefix-%
bind - split-window -v -c '#{pane_current_path}' # normally prefix-"

# -- display -------------------------------------------------------------------

# start window and pane numbering at 1
setw -g base-index 1
setw -g pane-base-index 1

# Automatically set window title
setw -g automatic-rename on

# border colours
set -g pane-border-style fg=magenta
set -g pane-active-border-style fg=magenta
set -g pane-active-border-style bg=default

# -- status bar ----------------------------------------------------------------

set -g status on
set -g status-interval 5
set -g status-utf8 on

# set color for status bar
set-option -g status-bg colour235
set-option -g status-fg yellow

# set window list colors
set-window-option -g window-status-fg brightblue
set-window-option -g window-status-bg colour236
set-window-option -g window-status-attr dim

set-window-option -g window-status-current-fg brightred
set-window-option -g window-status-current-bg colour236
set-window-option -g window-status-current-attr bright

set -g status-bg "colour0"
set -g message-command-fg "colour7"
set -g status-justify "left"
set -g status-left-length "100"
set -g status "on"
set -g pane-active-border-fg "colour236"
set -g message-bg "colour25"
set -g status-right-length "100"
set -g status-right-attr "none"
set -g message-fg "colour7"
set -g message-command-bg "colour25"
set -g status-attr "none"
set -g pane-border-fg "colour25"
set -g status-left-attr "none"
setw -g window-status-fg "colour248"
setw -g window-status-attr "none"
setw -g window-status-activity-bg "colour0"
setw -g window-status-activity-attr "none"
setw -g window-status-activity-fg "colour236"
setw -g window-status-separator ""
setw -g window-status-bg "colour0"

# Status bar.
set -g status-left '#[fg=colour15,bold] ‚ùè #S #[fg=colour236,bg=colour0,nobold,nounderscore,noitalics]'
set -g status-right '#[fg=colour15] #{prefix_highlight} #(/usr/local/bin/tmux-mem --format ":currentBytes [#[fg=:color]:spark#[default]] #[fg=:color]:percent#[default]") | #(/usr/local/bin/tmux-cpu --format ":load [#[fg=:color]:spark#[default]] #[fg=:color]:percent#[default]") #[fg=colour15,bold]#h '
setw -g window-status-format '#[fg=colour248,bg=colour0] #I #W '
setw -g window-status-current-format '#[fg=colour0,bg=colour25,nobold,nounderscore,noitalics]#[fg=colour7,bg=colour25] #I #W '

# -- plugins -------------------------------------------------------------------

# tmux plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-cpu'

# Initialize TMUX plugin manager
run '~/.tmux/plugins/tpm/tpm'
